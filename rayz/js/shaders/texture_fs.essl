Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
	precision highp float;
    varying vec2 texCoord;
    uniform sampler2D colorTexture;

    varying vec4 worldPos;
    varying vec3 worldNormal;

    uniform vec4 lightSources[2];
    uniform vec3 lightPowerDensity[2];
    uniform vec3 direction;
    vec3 powerDensity;

	void main(void) {
        vec3 light;
        float cos;
        float cos2;
        vec3 apparentColor = vec3(0,0,0);
        float shiny;
        vec3 h;

        for (int i = 0; i < 2; i++) {
            light = lightSources[i].xyz - lightSources[i].w * worldPos.xyz;
            cos = dot(normalize(light), normalize(worldNormal));
            cos2 = dot(normalize(light), normalize(direction));
            h = (normalize(light) + normalize(worldNormal)) / 2.0;
            if (lightSources[i].w == 1.0) {
                powerDensity = lightPowerDensity[i] * pow(cos2, 5.0);
            } else
                powerDensity = lightPowerDensity[i];
            vec3 M = powerDensity / dot(light, light);
            apparentColor += M * texture2D(colorTexture, texCoord).rgb * max(cos, 0.0) + M * texture2D(colorTexture, texCoord).rgb * pow(max(dot(worldNormal, h), 0.0), 5.0);
        }
        gl_FragColor = vec4(apparentColor, 1);
	}
`;
